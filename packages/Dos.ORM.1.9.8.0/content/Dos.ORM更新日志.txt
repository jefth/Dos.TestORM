2015-06-08 Dos.ORM（原Hxj.Data）（v1.9.8.0）
	*）【重要更新】lambda的常量、变量计算增加缓存，性能提升10-20倍。举例：.Where(d => Convert.ToInt32(Model.Price.ToString())+2/3*5 > 0)，lambda计算默认是通过委托+反射取结果，现在计算公式将会缓存，性能大大提升。
	*）现在.Where()的lambda支持常量、变量之间的比较，同时比较符号左右不分顺序。
	*）解决bool类型字段偶尔为0时，映射结果却为true。
	*）【重要更新】增加多表关联查询的.Where<T,T2,T3>()Lambda表达式写法：.From<T1>().Where<T2, T3, T4>((a, b, c) => a.ID != null && b.Name == "ITdos")。
	*）【重要更新】Where条件拼接类同上。例：var where = new Where<T1>(); where.And<T2, T3>((a, b, c) => a.ID != null && b.Name == "ITdos");。
	*）.Delete<T>()增加IEnumerable<T> entities重载。
	*）【重要更新】新增Where、Where<T>（同WhereClipBuilder），同时.Where()增加可传入Where对象重载。
	*）优化了lambda filed.In()、.NotIn()传入数组的类型。（之前是string字段只能传string数组，guid只能传guid数组。现在无限制，int字段同样可以传入string数组，strng字段同样可以传入int数组。）
	*）解决.FromSql()在MySql、Oracle下参数名使用"@"与字段名一样时（如：WHERE ID=@ID）报错的Bug。
	*）解决.OrderBy()Lambda表达式不支持DateTime等特殊类型字段的Bug。
	*）解决.OrderBy()单个字段Lambda表达式无法Desc的Bug。
	*）解决lambda表达式传值的一个Bug。

2015-05-31 Dos.ORM（原Hxj.Data）（v1.9.5）
	*）【重要更新】.LeftJoin<T>()和.InnerJoin<T>()增加Lambda表达式写法：.LeftJoin<Product>((a, b) => a.ProductID == b.ID)。
	*）【重要更新】增加多表关联查询的.Select<T2,T3,T4>()Lambda表达式写法：.From<T1>().Select<T2, T3,T4>((a, b, c, d) => new { a.Column1, b.Column2, c.Column3, d.Column4 })。生成Sql：SELCT T1.Column1,T2.Column2,T3.Column3,T4.Column4 FROM
	*）.Where()增加Lambda表达式字段与字段比较：.Where(d => d.Column1 == d.Column2)。
	*）重写.FromSql().ToList<T>()方法，现在支持映射任意实体类。
	*）【重要更新】lambda表达式增加支持字段函数：As()、Sum()
	*）【重要更新】新增.ToList<T>()写法，T若为类(class)，会把数据直接映射至class。T若为数据类型（如:Guid、string），则需要选择一个字段：.Select(d=>d.ColumnName).ToList<Guid>()
	*）【重要更新】lambda表达式增加支持字段函数：Like()、Contains()（同Like）、StartsWith()、EndsWith()、In()、NotIn()、IsNull()、IsNotNull()
	*）解决.SelectIn()、.SelectNotIn()传入length=0的数组时ORM报错。
	*）解决使用.Select(d=>d.ColumnName).ToList()查询指定字段会报错。

2015-05-18 Dos.ORM（原Hxj.Data）（v1.8.6.2）
	*）字段.SelectIn()增加重载：.SelectIn<T>(List<T> values)
	*）字段增加.In()，效果同.SelectIn()
	*）字段.SelectNotIn()增加重载：.SelectNotIn<T>(List<T> values)
	*）字段增加.NotIn()，效果同.SelectNotIn()
	*）.Insert<T>()增加重载：.Insert<T>(IEnumerable<T> entities)

2015-05-16 Dos.ORM（原Hxj.Data）（v1.8.6.1）
	*）.Update<T>()增加重载：.Update<T>(IEnumerable<T> entities)

2015-05-15 Dos.ORM（原Hxj.Data）（v1.8.6）
	*）From<T>()增加.First()，效果同.ToFirst()
	*）【重要更新】现在多表关联查询.ToList()支持“扩展字段”Mapping了。“扩展字段”可直接使用“贫血模型”，如：public string Name{get;set;}

2015-05-10 Dos.ORM（原Hxj.Data）（v1.8.5）
	*）【重要更新】From<T>().GroupBy()增加Lambda表达式写法
	*）【重要更新】From<T>().OrderBy()增加Lambda表达式写法
	*）增加From<T>().OrderByDescending()
	*）【重要更新】From<T>().Having()增加Lambda表达式写法
	*）【重要更新】From<T>().Select()增加Lambda表达式写法

2015-05-05 Dos.ORM（原Hxj.Data）（v1.8.1）
	*）解决Dos.ORM在MySql下仍然调用Hxj.Data.MySql的Bug，现在会正确调用Dos.ORM.MySql。Sqlite同理。

2015-05-03 Dos.ORM（原Hxj.Data）（v1.8.0）
	*）【重要更新】Hxj.Data正式更名为Dos.ORM，与Dos.WorkFlow、Dos.WeChat等形成产品线。老程序集迁移至新程序集：将【using Hxj.Data;】全部替换为【using Dos.ORM;】、将【using Hxj.Data.Common;】全部替换成【using Dos.ORM.Common;】即可！（勾选“区分大小写”、“全字匹配”，选中“整个解决方案”，点击“全部替换”。）
	*）【重要更新】From<T>().Where()增加Lambda表达式“==”、“!=”写法。
	*）【重要更新】Delete<T>().Where()增加Lambda表达式“==”、“!=”写法。
	*）随机16位字母参数名修改为“表名+参数+全局序号(以继续保证唯一)”，使增、删、查、改性能提升50%。
	*）单条数据插入去除事务，性能提升10%。
	*）批量Insert、Update、Delete由void更改为返回受影响行数。
	*）QueryOperator、DataUtils、Field 增加IsNotNULL。
	*）Field增加Like，同Contain。
	*）【重要更新】新增WhereClipBuilder<T>，以及And、Or的Lambda表达式“==”、“!=”写法。

Hxj.Data(V1.7.4.7)
	增加UpdateAll方法更新实体全部字段。

Hxj.Data(V1.7.4.6)
	修正存储过程名和参数名重复时的参数替换问题。

Hxj.Data(V1.7.4.5)
	修正access的bool类型支持。

Hxj.Data(V1.7.4.4)
	修正oracle执行存储过程的参数问题。

Hxj.Data(V1.7.4.3)
1、增加对字段的Distinct操作，例如：Products._.ID.Distinct()  

Hxj.Data(V1.7.4.2)
1、增加缓存操作，获取缓存数量、获取缓存键值列表、清除所有缓存。

Hxj.Data(V1.7.4.1)
1、修正Access数据库多次联合查询的错误。

Hxj.Data(V1.7.4)
1、修正Access数据库创建DbSession失败。

Hxj.Data(V1.7.3.2)
1、WhereClip.Exists方法，用来生成exists (select * from table )这种条件。
2、修正oracle子查询中表别名不能使用as关键字。

Hxj.Data(V1.7.3.1)
1、增加DbTrans类方法：
 FromSql(string sql) //事务内执行sql语句
 FromPro(string proName) //事务内执行存储过程

Hxj.Data(V1.7.3)
1、增加FromSection的Having方法，在增加处理groupby的having条件，原先的where方法则where条件。
（由于之前版本的having条件是where方法，所以会存在功能差异，升级时请注意。）

Hxj.Data(V1.7.2.1)
1、修正oracle批处理。

Hxj.Data(V1.7.2)
1、增加WhereClipBuilder,用来快速构造WhereClip。
2、修正oracle的查询。

Hxj.Data (V1.7.1.1)
1、增加FromSection.ToFirstDefault()方法，当查询不到数据则默认构造一个实体。
2、增加FromSection.GroupBy(params Field field)方法，设置分组。

Hxj.Data (V1.7.1)
1、优化oracle查询。
2、增加Field.SelectIn处理int类型就不参数化，直接生成例如： Field in (1,2,3)
3、修正oracle支持。

Hxj.Data (V1.7.0)
1、支持MySql。

Hxj.Data (V1.6.7)
1、增加Hxj.Data.Common.EntityUtils.SetDocumentValue方法，用于Web页面赋值。
2、其他修正。

Hxj.Data (V1.6.6)
1、修正由于string to whereclip的隐式转换，导致Delete<TEntity>(params object[] pkValues)在传入字符串类型无法调用。
2、增加Insert<TEntity>(params TEntity[] entities)
       Update<TEntity>(params TEntity[] entities)方法


Hxj.Data (V1.6.5)
1、修正Hxj.Data.Common.EntityUtils.UpdateModel
       Hxj.Data.Common.EntityUtils.TryUpdateModel
   方法无法赋值的问题（在实体属性首字母大写）
2、修正更新的时候无法排除自增长字段。
3、增加Hxj.Data.Common.EntityUtils.SetValue<TEntity>(TEntity toEntity, TEntity fromEntity)方法实体之间赋值。


Hxj.Data (V1.6.4)
1、优化分页，当分页到达过半时，分页则是先倒叙取count-startindex+1,再正序取pagesize数据。
2、增加FromSection.AddSelect(FromSection),可对查询列中加子查询。
3、增加string to WhereClip的隐式转换。


Hxj.Data (V1.6.3)
1、增加DbTrans.FromSection 查询。
2、修正实体类属性首字母大写后，生成实体主键条件无法生成。
3、修正其他BUG。


2010.1.30
0.5.0
增强了事务和批处理。
修正了一些bug

2009.12.18
增强子查询
增加Hxj.Data.Cache
修正batch错误 
修正一些小bug

2009.11.5
修正子查询错误
修改WhereClip的Bug

2009.10.16
版本0.2
修正添加、更新失败
修正Union查询出错
其他一些小Bug的修复

2009.09.22
发布一个版本 0.1 版本