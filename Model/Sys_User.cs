//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//     Support: http://www.cnblogs.com/huxj
//     Website: http://www.ITdos.com/
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace DataAccess.Entities
{

    /// <summary>
    /// 实体类Sys_Users 。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Serializable]
    public partial class Sys_Users : Entity
    {
        public Sys_Users() : base("Sys_Users") { }

        #region Model
        private Guid _ID;
        private string _Username;
        private string _Account;
        private string _Pwd;
        private bool _State;
        private DateTime? _LastLoginTime;
        private string _Remark;
        private DateTime _CreateTime;
        private DateTime _LastUptdateTime;
        private int _IsDelete;
        private Guid? _ClassId;
        private bool _CanLogin;
        private int _ErrorCount;
        private bool _DefaultAdmin;
        private Guid? _DrivingSchoolId;
        /// <summary>
        /// 
        /// </summary>
        public Guid ID
        {
            get { return _ID; }
            set
            {
                this.OnPropertyValueChange(_.ID, _ID, value);
                this._ID = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Username
        {
            get { return _Username; }
            set
            {
                this.OnPropertyValueChange(_.Username, _Username, value);
                this._Username = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Account
        {
            get { return _Account; }
            set
            {
                this.OnPropertyValueChange(_.Account, _Account, value);
                this._Account = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Pwd
        {
            get { return _Pwd; }
            set
            {
                this.OnPropertyValueChange(_.Pwd, _Pwd, value);
                this._Pwd = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public bool State
        {
            get { return _State; }
            set
            {
                this.OnPropertyValueChange(_.State, _State, value);
                this._State = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public DateTime? LastLoginTime
        {
            get { return _LastLoginTime; }
            set
            {
                this.OnPropertyValueChange(_.LastLoginTime, _LastLoginTime, value);
                this._LastLoginTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string Remark
        {
            get { return _Remark; }
            set
            {
                this.OnPropertyValueChange(_.Remark, _Remark, value);
                this._Remark = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public DateTime CreateTime
        {
            get { return _CreateTime; }
            set
            {
                this.OnPropertyValueChange(_.CreateTime, _CreateTime, value);
                this._CreateTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public DateTime LastUptdateTime
        {
            get { return _LastUptdateTime; }
            set
            {
                this.OnPropertyValueChange(_.LastUptdateTime, _LastUptdateTime, value);
                this._LastUptdateTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int IsDelete
        {
            get { return _IsDelete; }
            set
            {
                this.OnPropertyValueChange(_.IsDelete, _IsDelete, value);
                this._IsDelete = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public Guid? ClassId
        {
            get { return _ClassId; }
            set
            {
                this.OnPropertyValueChange(_.ClassId, _ClassId, value);
                this._ClassId = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public bool CanLogin
        {
            get { return _CanLogin; }
            set
            {
                this.OnPropertyValueChange(_.CanLogin, _CanLogin, value);
                this._CanLogin = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int ErrorCount
        {
            get { return _ErrorCount; }
            set
            {
                this.OnPropertyValueChange(_.ErrorCount, _ErrorCount, value);
                this._ErrorCount = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public bool DefaultAdmin
        {
            get { return _DefaultAdmin; }
            set
            {
                this.OnPropertyValueChange(_.DefaultAdmin, _DefaultAdmin, value);
                this._DefaultAdmin = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public Guid? DrivingSchoolId
        {
            get { return _DrivingSchoolId; }
            set
            {
                this.OnPropertyValueChange(_.DrivingSchoolId, _DrivingSchoolId, value);
                this._DrivingSchoolId = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.ID};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
				_.ID,
				_.Username,
				_.Account,
				_.Pwd,
				_.State,
				_.LastLoginTime,
				_.Remark,
				_.CreateTime,
				_.LastUptdateTime,
				_.IsDelete,
				_.ClassId,
				_.CanLogin,
				_.ErrorCount,
				_.DefaultAdmin,
				_.DrivingSchoolId};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
				this._ID,
				this._Username,
				this._Account,
				this._Pwd,
				this._State,
				this._LastLoginTime,
				this._Remark,
				this._CreateTime,
				this._LastUptdateTime,
				this._IsDelete,
				this._ClassId,
				this._CanLogin,
				this._ErrorCount,
				this._DefaultAdmin,
				this._DrivingSchoolId};
        }
        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        public override void SetPropertyValues(IDataReader reader)
        {
            this._ID = DataUtils.ConvertValue<Guid>(reader["ID"]);
            this._Username = DataUtils.ConvertValue<string>(reader["Username"]);
            this._Account = DataUtils.ConvertValue<string>(reader["Account"]);
            this._Pwd = DataUtils.ConvertValue<string>(reader["Pwd"]);
            this._State = DataUtils.ConvertValue<bool>(reader["State"]);
            this._LastLoginTime = DataUtils.ConvertValue<DateTime?>(reader["LastLoginTime"]);
            this._Remark = DataUtils.ConvertValue<string>(reader["Remark"]);
            this._CreateTime = DataUtils.ConvertValue<DateTime>(reader["CreateTime"]);
            this._LastUptdateTime = DataUtils.ConvertValue<DateTime>(reader["LastUptdateTime"]);
            this._IsDelete = DataUtils.ConvertValue<int>(reader["IsDelete"]);
            this._ClassId = DataUtils.ConvertValue<Guid?>(reader["ClassId"]);
            this._CanLogin = DataUtils.ConvertValue<bool>(reader["CanLogin"]);
            this._ErrorCount = DataUtils.ConvertValue<int>(reader["ErrorCount"]);
            this._DefaultAdmin = DataUtils.ConvertValue<bool>(reader["DefaultAdmin"]);
            this._DrivingSchoolId = DataUtils.ConvertValue<Guid?>(reader["DrivingSchoolId"]);
        }
        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        public override void SetPropertyValues(DataRow row)
        {
            this._ID = DataUtils.ConvertValue<Guid>(row["ID"]);
            this._Username = DataUtils.ConvertValue<string>(row["Username"]);
            this._Account = DataUtils.ConvertValue<string>(row["Account"]);
            this._Pwd = DataUtils.ConvertValue<string>(row["Pwd"]);
            this._State = DataUtils.ConvertValue<bool>(row["State"]);
            this._LastLoginTime = DataUtils.ConvertValue<DateTime?>(row["LastLoginTime"]);
            this._Remark = DataUtils.ConvertValue<string>(row["Remark"]);
            this._CreateTime = DataUtils.ConvertValue<DateTime>(row["CreateTime"]);
            this._LastUptdateTime = DataUtils.ConvertValue<DateTime>(row["LastUptdateTime"]);
            this._IsDelete = DataUtils.ConvertValue<int>(row["IsDelete"]);
            this._ClassId = DataUtils.ConvertValue<Guid?>(row["ClassId"]);
            this._CanLogin = DataUtils.ConvertValue<bool>(row["CanLogin"]);
            this._ErrorCount = DataUtils.ConvertValue<int>(row["ErrorCount"]);
            this._DefaultAdmin = DataUtils.ConvertValue<bool>(row["DefaultAdmin"]);
            this._DrivingSchoolId = DataUtils.ConvertValue<Guid?>(row["DrivingSchoolId"]);
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// * 
            /// </summary>
            public readonly static Field All = new Field("*", "Sys_Users");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field ID = new Field("ID", "Sys_Users", "ID");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Username = new Field("Username", "Sys_Users", "Username");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Account = new Field("Account", "Sys_Users", "Account");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Pwd = new Field("Pwd", "Sys_Users", "Pwd");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field State = new Field("State", "Sys_Users", "State");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field LastLoginTime = new Field("LastLoginTime", "Sys_Users", "LastLoginTime");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Remark = new Field("Remark", "Sys_Users", "Remark");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field CreateTime = new Field("CreateTime", "Sys_Users", "CreateTime");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field LastUptdateTime = new Field("LastUptdateTime", "Sys_Users", "LastUptdateTime");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field IsDelete = new Field("IsDelete", "Sys_Users", "IsDelete");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field ClassId = new Field("ClassId", "Sys_Users", "ClassId");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field CanLogin = new Field("CanLogin", "Sys_Users", "CanLogin");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field ErrorCount = new Field("ErrorCount", "Sys_Users", "ErrorCount");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field DefaultAdmin = new Field("DefaultAdmin", "Sys_Users", "DefaultAdmin");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field DrivingSchoolId = new Field("DrivingSchoolId", "Sys_Users", "DrivingSchoolId");
        }
        #endregion


    }
}

