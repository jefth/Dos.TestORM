//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.6387
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Hxj.Data;
using Hxj.Data.Common;

namespace Hxj.Model
{

    /// <summary>
    /// 实体类TestTable 。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Serializable]
    public partial class TestTable : Entity
    {
        public TestTable() : base("TestTable") { }

        #region Model
        private Guid _ID;
        private string _c1;
        private string _c2;
        private string _c3;
        private string _c4;
        private string _c5;
        private string _c6;
        private string _c7;
        private string _c8;
        private long? _c9;
        private string _c10;
        private string _c11;
        private decimal? _c12;
        private string _c13;
        private Guid? _c14;
        private int? _c15;
        private bool? _c16;
        private string _c17;
        private DateTime? _c18;
        private double? _c19;
        private string _c20;
        /// <summary>
        /// 
        /// </summary>
        public Guid ID
        {
            get { return _ID; }
            set
            {
                this.OnPropertyValueChange(_.ID, _ID, value);
                this._ID = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c1
        {
            get { return _c1; }
            set
            {
                this.OnPropertyValueChange(_.c1, _c1, value);
                this._c1 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c2
        {
            get { return _c2; }
            set
            {
                this.OnPropertyValueChange(_.c2, _c2, value);
                this._c2 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c3
        {
            get { return _c3; }
            set
            {
                this.OnPropertyValueChange(_.c3, _c3, value);
                this._c3 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c4
        {
            get { return _c4; }
            set
            {
                this.OnPropertyValueChange(_.c4, _c4, value);
                this._c4 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c5
        {
            get { return _c5; }
            set
            {
                this.OnPropertyValueChange(_.c5, _c5, value);
                this._c5 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c6
        {
            get { return _c6; }
            set
            {
                this.OnPropertyValueChange(_.c6, _c6, value);
                this._c6 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c7
        {
            get { return _c7; }
            set
            {
                this.OnPropertyValueChange(_.c7, _c7, value);
                this._c7 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c8
        {
            get { return _c8; }
            set
            {
                this.OnPropertyValueChange(_.c8, _c8, value);
                this._c8 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public long? c9
        {
            get { return _c9; }
            set
            {
                this.OnPropertyValueChange(_.c9, _c9, value);
                this._c9 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c10
        {
            get { return _c10; }
            set
            {
                this.OnPropertyValueChange(_.c10, _c10, value);
                this._c10 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c11
        {
            get { return _c11; }
            set
            {
                this.OnPropertyValueChange(_.c11, _c11, value);
                this._c11 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public decimal? c12
        {
            get { return _c12; }
            set
            {
                this.OnPropertyValueChange(_.c12, _c12, value);
                this._c12 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c13
        {
            get { return _c13; }
            set
            {
                this.OnPropertyValueChange(_.c13, _c13, value);
                this._c13 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public Guid? c14
        {
            get { return _c14; }
            set
            {
                this.OnPropertyValueChange(_.c14, _c14, value);
                this._c14 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int? c15
        {
            get { return _c15; }
            set
            {
                this.OnPropertyValueChange(_.c15, _c15, value);
                this._c15 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public bool? c16
        {
            get { return _c16; }
            set
            {
                this.OnPropertyValueChange(_.c16, _c16, value);
                this._c16 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c17
        {
            get { return _c17; }
            set
            {
                this.OnPropertyValueChange(_.c17, _c17, value);
                this._c17 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public DateTime? c18
        {
            get { return _c18; }
            set
            {
                this.OnPropertyValueChange(_.c18, _c18, value);
                this._c18 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public double? c19
        {
            get { return _c19; }
            set
            {
                this.OnPropertyValueChange(_.c19, _c19, value);
                this._c19 = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string c20
        {
            get { return _c20; }
            set
            {
                this.OnPropertyValueChange(_.c20, _c20, value);
                this._c20 = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.ID};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
				_.ID,
				_.c1,
				_.c2,
				_.c3,
				_.c4,
				_.c5,
				_.c6,
				_.c7,
				_.c8,
				_.c9,
				_.c10,
				_.c11,
				_.c12,
				_.c13,
				_.c14,
				_.c15,
				_.c16,
				_.c17,
				_.c18,
				_.c19,
				_.c20};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
				this._ID,
				this._c1,
				this._c2,
				this._c3,
				this._c4,
				this._c5,
				this._c6,
				this._c7,
				this._c8,
				this._c9,
				this._c10,
				this._c11,
				this._c12,
				this._c13,
				this._c14,
				this._c15,
				this._c16,
				this._c17,
				this._c18,
				this._c19,
				this._c20};
        }
        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        public override void SetPropertyValues(IDataReader reader)
        {
            this._ID = DataUtils.ConvertValue<Guid>(reader["ID"]);
            this._c1 = DataUtils.ConvertValue<string>(reader["c1"]);
            this._c2 = DataUtils.ConvertValue<string>(reader["c2"]);
            this._c3 = DataUtils.ConvertValue<string>(reader["c3"]);
            this._c4 = DataUtils.ConvertValue<string>(reader["c4"]);
            this._c5 = DataUtils.ConvertValue<string>(reader["c5"]);
            this._c6 = DataUtils.ConvertValue<string>(reader["c6"]);
            this._c7 = DataUtils.ConvertValue<string>(reader["c7"]);
            this._c8 = DataUtils.ConvertValue<string>(reader["c8"]);
            this._c9 = DataUtils.ConvertValue<long?>(reader["c9"]);
            this._c10 = DataUtils.ConvertValue<string>(reader["c10"]);
            this._c11 = DataUtils.ConvertValue<string>(reader["c11"]);
            this._c12 = DataUtils.ConvertValue<decimal?>(reader["c12"]);
            this._c13 = DataUtils.ConvertValue<string>(reader["c13"]);
            this._c14 = DataUtils.ConvertValue<Guid?>(reader["c14"]);
            this._c15 = DataUtils.ConvertValue<int?>(reader["c15"]);
            this._c16 = DataUtils.ConvertValue<bool?>(reader["c16"]);
            this._c17 = DataUtils.ConvertValue<string>(reader["c17"]);
            this._c18 = DataUtils.ConvertValue<DateTime?>(reader["c18"]);
            this._c19 = DataUtils.ConvertValue<double?>(reader["c19"]);
            this._c20 = DataUtils.ConvertValue<string>(reader["c20"]);
        }
        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        public override void SetPropertyValues(DataRow row)
        {
            this._ID = DataUtils.ConvertValue<Guid>(row["ID"]);
            this._c1 = DataUtils.ConvertValue<string>(row["c1"]);
            this._c2 = DataUtils.ConvertValue<string>(row["c2"]);
            this._c3 = DataUtils.ConvertValue<string>(row["c3"]);
            this._c4 = DataUtils.ConvertValue<string>(row["c4"]);
            this._c5 = DataUtils.ConvertValue<string>(row["c5"]);
            this._c6 = DataUtils.ConvertValue<string>(row["c6"]);
            this._c7 = DataUtils.ConvertValue<string>(row["c7"]);
            this._c8 = DataUtils.ConvertValue<string>(row["c8"]);
            this._c9 = DataUtils.ConvertValue<long?>(row["c9"]);
            this._c10 = DataUtils.ConvertValue<string>(row["c10"]);
            this._c11 = DataUtils.ConvertValue<string>(row["c11"]);
            this._c12 = DataUtils.ConvertValue<decimal?>(row["c12"]);
            this._c13 = DataUtils.ConvertValue<string>(row["c13"]);
            this._c14 = DataUtils.ConvertValue<Guid?>(row["c14"]);
            this._c15 = DataUtils.ConvertValue<int?>(row["c15"]);
            this._c16 = DataUtils.ConvertValue<bool?>(row["c16"]);
            this._c17 = DataUtils.ConvertValue<string>(row["c17"]);
            this._c18 = DataUtils.ConvertValue<DateTime?>(row["c18"]);
            this._c19 = DataUtils.ConvertValue<double?>(row["c19"]);
            this._c20 = DataUtils.ConvertValue<string>(row["c20"]);
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// * 
            /// </summary>
            public readonly static Field All = new Field("*", "TestTable");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field ID = new Field("ID", "TestTable", "ID");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c1 = new Field("c1", "TestTable", "c1");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c2 = new Field("c2", "TestTable", "c2");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c3 = new Field("c3", "TestTable", "c3");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c4 = new Field("c4", "TestTable", "c4");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c5 = new Field("c5", "TestTable", "c5");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c6 = new Field("c6", "TestTable", "c6");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c7 = new Field("c7", "TestTable", "c7");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c8 = new Field("c8", "TestTable", "c8");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c9 = new Field("c9", "TestTable", "c9");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c10 = new Field("c10", "TestTable", "c10");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c11 = new Field("c11", "TestTable", "c11");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c12 = new Field("c12", "TestTable", "c12");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c13 = new Field("c13", "TestTable", "c13");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c14 = new Field("c14", "TestTable", "c14");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c15 = new Field("c15", "TestTable", "c15");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c16 = new Field("c16", "TestTable", "c16");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c17 = new Field("c17", "TestTable", "c17");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c18 = new Field("c18", "TestTable", "c18");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c19 = new Field("c19", "TestTable", "c19");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field c20 = new Field("c20", "TestTable", "c20");
        }
        #endregion


    }
}
